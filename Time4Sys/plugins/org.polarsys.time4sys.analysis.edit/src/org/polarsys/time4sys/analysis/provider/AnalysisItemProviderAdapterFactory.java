/*******************************************************************************
 * Copyright (c) 2017 RealTime-at-Work and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Lo√Øc Fejoz - initial API and implementation
 *******************************************************************************/
/**
 */
package org.polarsys.time4sys.analysis.provider;

import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.polarsys.time4sys.analysis.AnalysisPackage;
import org.polarsys.time4sys.analysis.util.AnalysisAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AnalysisItemProviderAdapterFactory extends AnalysisAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(AnalysisEditPlugin.INSTANCE, AnalysisPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AnalysisItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.AnalyzedSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalyzedSystemItemProvider analyzedSystemItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.AnalyzedSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalyzedSystemAdapter() {
		if (analyzedSystemItemProvider == null) {
			analyzedSystemItemProvider = new AnalyzedSystemItemProvider(this);
		}

		return analyzedSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Communication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationItemProvider communicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Communication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationAdapter() {
		if (communicationItemProvider == null) {
			communicationItemProvider = new CommunicationItemProvider(this);
		}

		return communicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.CommunicationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationResourceItemProvider communicationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.CommunicationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationResourceAdapter() {
		if (communicationResourceItemProvider == null) {
			communicationResourceItemProvider = new CommunicationResourceItemProvider(this);
		}

		return communicationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ComputingResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComputingResourceItemProvider computingResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ComputingResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComputingResourceAdapter() {
		if (computingResourceItemProvider == null) {
			computingResourceItemProvider = new ComputingResourceItemProvider(this);
		}

		return computingResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ConstraintContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintContainerItemProvider constraintContainerItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ConstraintContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintContainerAdapter() {
		if (constraintContainerItemProvider == null) {
			constraintContainerItemProvider = new ConstraintContainerItemProvider(this);
		}

		return constraintContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Delay} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DelayItemProvider delayItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Delay}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDelayAdapter() {
		if (delayItemProvider == null) {
			delayItemProvider = new DelayItemProvider(this);
		}

		return delayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.EventModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventModelItemProvider eventModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.EventModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventModelAdapter() {
		if (eventModelItemProvider == null) {
			eventModelItemProvider = new EventModelItemProvider(this);
		}

		return eventModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Fragment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FragmentItemProvider fragmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Fragment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFragmentAdapter() {
		if (fragmentItemProvider == null) {
			fragmentItemProvider = new FragmentItemProvider(this);
		}

		return fragmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.InputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputPortItemProvider inputPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.InputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputPortAdapter() {
		if (inputPortItemProvider == null) {
			inputPortItemProvider = new InputPortItemProvider(this);
		}

		return inputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.InputStimulus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputStimulusItemProvider inputStimulusItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.InputStimulus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputStimulusAdapter() {
		if (inputStimulusItemProvider == null) {
			inputStimulusItemProvider = new InputStimulusItemProvider(this);
		}

		return inputStimulusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.MemoryResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryResourceItemProvider memoryResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.MemoryResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryResourceAdapter() {
		if (memoryResourceItemProvider == null) {
			memoryResourceItemProvider = new MemoryResourceItemProvider(this);
		}

		return memoryResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.MutualExclusionResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MutualExclusionResourceItemProvider mutualExclusionResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.MutualExclusionResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMutualExclusionResourceAdapter() {
		if (mutualExclusionResourceItemProvider == null) {
			mutualExclusionResourceItemProvider = new MutualExclusionResourceItemProvider(this);
		}

		return mutualExclusionResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Offset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OffsetItemProvider offsetItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Offset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOffsetAdapter() {
		if (offsetItemProvider == null) {
			offsetItemProvider = new OffsetItemProvider(this);
		}

		return offsetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.OutputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputPortItemProvider outputPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.OutputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputPortAdapter() {
		if (outputPortItemProvider == null) {
			outputPortItemProvider = new OutputPortItemProvider(this);
		}

		return outputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.OutputStimulus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputStimulusItemProvider outputStimulusItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.OutputStimulus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputStimulusAdapter() {
		if (outputStimulusItemProvider == null) {
			outputStimulusItemProvider = new OutputStimulusItemProvider(this);
		}

		return outputStimulusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ProtectionParameterValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProtectionParameterValueItemProvider protectionParameterValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ProtectionParameterValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProtectionParameterValueAdapter() {
		if (protectionParameterValueItemProvider == null) {
			protectionParameterValueItemProvider = new ProtectionParameterValueItemProvider(this);
		}

		return protectionParameterValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ProtectionProtocol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProtectionProtocolItemProvider protectionProtocolItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ProtectionProtocol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProtectionProtocolAdapter() {
		if (protectionProtocolItemProvider == null) {
			protectionProtocolItemProvider = new ProtectionProtocolItemProvider(this);
		}

		return protectionProtocolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.RequiredProtectionParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredProtectionParameterItemProvider requiredProtectionParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.RequiredProtectionParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredProtectionParameterAdapter() {
		if (requiredProtectionParameterItemProvider == null) {
			requiredProtectionParameterItemProvider = new RequiredProtectionParameterItemProvider(this);
		}

		return requiredProtectionParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.RequiredSchedulingParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredSchedulingParameterItemProvider requiredSchedulingParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.RequiredSchedulingParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredSchedulingParameterAdapter() {
		if (requiredSchedulingParameterItemProvider == null) {
			requiredSchedulingParameterItemProvider = new RequiredSchedulingParameterItemProvider(this);
		}

		return requiredSchedulingParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ResourceSchedulingParameterValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceSchedulingParameterValueItemProvider resourceSchedulingParameterValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ResourceSchedulingParameterValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceSchedulingParameterValueAdapter() {
		if (resourceSchedulingParameterValueItemProvider == null) {
			resourceSchedulingParameterValueItemProvider = new ResourceSchedulingParameterValueItemProvider(this);
		}

		return resourceSchedulingParameterValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ResultContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResultContainerItemProvider resultContainerItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ResultContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResultContainerAdapter() {
		if (resultContainerItemProvider == null) {
			resultContainerItemProvider = new ResultContainerItemProvider(this);
		}

		return resultContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.SchedulerParameterValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchedulerParameterValueItemProvider schedulerParameterValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.SchedulerParameterValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchedulerParameterValueAdapter() {
		if (schedulerParameterValueItemProvider == null) {
			schedulerParameterValueItemProvider = new SchedulerParameterValueItemProvider(this);
		}

		return schedulerParameterValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Scheduler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchedulerItemProvider schedulerItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Scheduler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchedulerAdapter() {
		if (schedulerItemProvider == null) {
			schedulerItemProvider = new SchedulerItemProvider(this);
		}

		return schedulerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.Task} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskItemProvider taskItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.Task}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskAdapter() {
		if (taskItemProvider == null) {
			taskItemProvider = new TaskItemProvider(this);
		}

		return taskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.ResourceProtectionParameterValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceProtectionParameterValueItemProvider resourceProtectionParameterValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.ResourceProtectionParameterValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceProtectionParameterValueAdapter() {
		if (resourceProtectionParameterValueItemProvider == null) {
			resourceProtectionParameterValueItemProvider = new ResourceProtectionParameterValueItemProvider(this);
		}

		return resourceProtectionParameterValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.analysis.TwcaEventModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TwcaEventModelItemProvider twcaEventModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.analysis.TwcaEventModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTwcaEventModelAdapter() {
		if (twcaEventModelItemProvider == null) {
			twcaEventModelItemProvider = new TwcaEventModelItemProvider(this);
		}

		return twcaEventModelItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (analyzedSystemItemProvider != null) analyzedSystemItemProvider.dispose();
		if (communicationItemProvider != null) communicationItemProvider.dispose();
		if (communicationResourceItemProvider != null) communicationResourceItemProvider.dispose();
		if (computingResourceItemProvider != null) computingResourceItemProvider.dispose();
		if (constraintContainerItemProvider != null) constraintContainerItemProvider.dispose();
		if (delayItemProvider != null) delayItemProvider.dispose();
		if (eventModelItemProvider != null) eventModelItemProvider.dispose();
		if (fragmentItemProvider != null) fragmentItemProvider.dispose();
		if (inputPortItemProvider != null) inputPortItemProvider.dispose();
		if (inputStimulusItemProvider != null) inputStimulusItemProvider.dispose();
		if (memoryResourceItemProvider != null) memoryResourceItemProvider.dispose();
		if (mutualExclusionResourceItemProvider != null) mutualExclusionResourceItemProvider.dispose();
		if (offsetItemProvider != null) offsetItemProvider.dispose();
		if (outputPortItemProvider != null) outputPortItemProvider.dispose();
		if (outputStimulusItemProvider != null) outputStimulusItemProvider.dispose();
		if (protectionParameterValueItemProvider != null) protectionParameterValueItemProvider.dispose();
		if (protectionProtocolItemProvider != null) protectionProtocolItemProvider.dispose();
		if (requiredProtectionParameterItemProvider != null) requiredProtectionParameterItemProvider.dispose();
		if (requiredSchedulingParameterItemProvider != null) requiredSchedulingParameterItemProvider.dispose();
		if (resourceSchedulingParameterValueItemProvider != null) resourceSchedulingParameterValueItemProvider.dispose();
		if (resultContainerItemProvider != null) resultContainerItemProvider.dispose();
		if (schedulerParameterValueItemProvider != null) schedulerParameterValueItemProvider.dispose();
		if (schedulerItemProvider != null) schedulerItemProvider.dispose();
		if (taskItemProvider != null) taskItemProvider.dispose();
		if (resourceProtectionParameterValueItemProvider != null) resourceProtectionParameterValueItemProvider.dispose();
		if (twcaEventModelItemProvider != null) twcaEventModelItemProvider.dispose();
	}

}
